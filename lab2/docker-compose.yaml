name: lab2

services:

  nginx_service:
    container_name: nginx_container
    build: 
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - 80:80
    depends_on:
      backend_service:
        condition: service_started
    volumes:
      - staticfiles_volume:/staticfiles

  backend_service:
    container_name: backend_container
    image: backend_image
    build: 
      context: ./backend
      dockerfile: Dockerfile
    command: >
      sh -c "
      python manage.py migrate --no-input &&
      python manage.py collectstatic --no-input &&
      gunicorn lab1.wsgi:application --bind 0.0.0.0:8000
      "
    volumes:
      - staticfiles_volume:/staticfiles
    depends_on:
      postgres_service:
        condition: service_healthy
      
  postgres_service:
    container_name: postgres_container
    image: postgres:17-alpine
    environment:
      - POSTGRES_USER=django
      - POSTGRES_DB=lab1_db
      - POSTGRES_PASSWORD=12345
    healthcheck:
      test: ["CMD-SHELL", "pg_isready --username=$${POSTGRES_USER} --dbname=$${POSTGRES_DB}"]
      interval: 1s
      timeout: 1s
      retries: 10
    volumes:
      - postgres_volume:/var/lib/postgresql/data

volumes:
  postgres_volume:
  staticfiles_volume: